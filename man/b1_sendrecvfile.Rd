% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R_zmq_transfer.r
\name{File Transfer Functions}
\alias{File Transfer Functions}
\alias{zmq.recvfile}
\alias{zmq.sendfile}
\title{File Transfer Functions}
\usage{
zmq.sendfile(socket, filename, verbose = FALSE,
  flags = .pbdZMQEnv$ZMQ.SR$BLOCK)

zmq.recvfile(socket, filename, verbose = FALSE,
  flags = .pbdZMQEnv$ZMQ.SR$BLOCK)
}
\arguments{
\item{socket}{a ZMQ socket}

\item{filename}{the name of the file to send or the location to receive (recv) it into}

\item{verbose}{logical; determines if}

\item{flags}{a flag for the method used by \code{zmq_sendfile} and
\code{zmq_recvfile}}
}
\value{
\code{zmq.sendfile()} and \code{zmq.recvfile()} return
number of bytes (invisible) in the sent message if successful,
otherwise returns -1 (invisible) and sets \code{errno} to the error
value, see ZeroMQ manual for details.
}
\description{
File transfer functions
}
\details{
\code{zmq.sendfile()} is a high level R function calling ZMQ C API
\code{zmq_send()} sending the data stored at \code{filename} out in chunks.

\code{zmq.recvfile()} is a high level R function calling ZMQ C API
\code{zmq_recv()} receiving data from \code{zmq.sendfile()} and
storing it in \code{filename}.

\code{buf.type} currently supports \code{char} and \code{raw} which are both
in R object format.
}
\examples{
\dontrun{
### Using request-reply pattern.

### Server --- run in the background/in another R session
# setup
library(pbdZMQ, quietly = TRUE)
context <- zmq.ctx.new()
socket <- zmq.socket(context, .pbdZMQEnv$ZMQ.ST$REP)
zmq.bind(socket, "tcp://*:55555")

# Receive file from client, store locally as "/tmp/data.csv"
zmq.recvfile(socket, "/tmp/data.csv")

# cleanup
zmq.close(socket)
zmq.ctx.destroy(context)



### Client --- run in the foreground.
# setup
library(pbdZMQ, quietly = TRUE)
context <- zmq.ctx.new()
socket <- zmq.socket(context, .pbdZMQEnv$ZMQ.ST$REQ)
zmq.connect(socket, "tcp://localhost:55555")

# Send file "data.csv" to server
zmq.sendfile(socket,"data.csv")

# cleanup
zmq.close(socket)
zmq.ctx.destroy(context)
}

}
\author{
Christian Heckendorf and Drew Schmidt.
}
\references{
ZeroMQ/4.1.0 API Reference:
\url{http://api.zeromq.org/4-1:_start}

Programming with Big Data in R Website: \url{http://r-pbd.org/}
}
\seealso{
\code{\link{zmq.msg.send}()}, \code{\link{zmq.msg.recv}()}.
}
\keyword{programming}

