.onLoad <- function(libname, pkgname){
  zmq.ldflags <- "@ZMQ_LDFLAGS@"
  ext.libs <- "@EXT_LIBS@"

  if(ext.libs == "$(R_ZMQ)"){
    ### Use default zmq library.
    dn <- paste(libname, "/", pkgname, "/libs/", sep = "")
  } else{
    ### Use external zmq library.
    dn <- gsub("-L(.*) -lzmq", "\\1", zmq.ldflags)
    if(gsub(".*(.)$", "\\1", dn) != "/"){
      dn <- paste(dn, "/", sep = "")
    }
  }

  ### Load ZMQ.
  if(Sys.info()[['sysname']] == "Darwin"){
    files <- list.files(path = dn, pattern = "libzmq\\.(.*)\\.dylib")
  } else{
    files <- c("libzmq.so", "libzmq.so.dSYM")
  }
  files <- paste(dn, files, sep = "")
  for(i.file in files){
    if(file.exists(i.file)){
      ### Load "libzmq.*".
      test <- try(dyn.load(i.file, local = FALSE), silent = TRUE)
      if(class(test) == "try-error"){
        stop(paste("Could not load ", i.file, sep = ""))
      }
    }
  }

  ### Load "pbdZMQ.so".
  library.dynam("pbdZMQ", pkgname, libname)

  ### Preload to global environment.
  invisible(eval(parse(text = "pbdZMQ:::.zmqopt_init()")))

  invisible()
} # End of .onLoad().

.onUnload <- function(libpath){
  ### Unload "pbdZMQ.so".
  library.dynam.unload("pbdZMQ", libpath)

  ### Check external.
  zmq.ldflags <- "@ZMQ_LDFLAGS@"
  ext.libs <- "@EXT_LIBS@"

  if(ext.libs == ""){
    ### Use default zmq library.
    dn <- paste(libpath, "/libs/", sep = "")
  } else{
    ### Use external zmq library.
    dn <- gsub("-L(.*) -lzmq", "\\1", zmq.ldflags)
    if(gsub(".*(.)$", "\\1", dn) != "/"){
      dn <- paste(dn, "/", sep = "")
    }
  }

  ### Unload ZMQ.
  if(Sys.info()[['sysname']] == "Darwin"){
    files <- list.files(path = dn, pattern = "libzmq\\.(.*)\\.dylib")
  } else{
    files <- c("libzmq.so", "libzmq.so.dSYM")
  }
  files <- paste(dn, files, sep = "")
  for(i.file in files){
    if(file.exists(i.file)){
      ### Unload "libzmq.so".
      test <- try(dyn.unload(i.file), silent = TRUE)
    }
  }

  invisible()
} # End of .onUnload().

.onAttach <- function(libname, pkgname){
  invisible()
} # End of .onAttach().

